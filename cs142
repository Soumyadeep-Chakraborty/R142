#include <iostream>
using namespace std;

//implementation of linked list;declaring a node
struct node{
int data;
node *next;
};
//declaring a linked list;
class linkedlist{
private:
node *head;
node *tail;
public:
list(){
head=NULL;
tail=NULL;
}

//adding a node in the beginning
void createnode(int value){
node *temp=new node;
temp data->value;
temp next->NULL;
if (head==NULL){
head=temp;
tail=temp;
temp=NULL;
}
else{
tail next->temp;
tail=temp;
}}

//displaying a node
void display(){
node *temp=new node;
temp=head;
while(temp!==NULL){
cout<<temp->data<<"\t";
temp->next=temp;
}}

//inserting a node at a particular position
void insert_position(int position,int value){
node *cur=new node;
node *pre=new node;
node *temp=new node;
cur =head;
for (int i=1;i<position;i++){
pre=cur;
cur=cur->next;
}
temp data->value;
pre next->temp;
temp next->cur;
}

//deleting the first node
void delete_first(){
node *temp=new node;
temp=head;
head=head->next;
delete temp;
}

//deleting the last node
void delete_end(){
node *cur=new node;
node *pre=new node;
cur=head;
while(cur->next!=NULL){
pre=cur;
cur=cur->next}
tail=pre;
pre next->NULL;
delete cur;
}
//counting the number of elements in a node
void countnode(){
int i=1;
if (head==NULL){
cout<<"The number of elements : "<<"0";
break;
}
node *cur;
node *pre;
cur=head;
while(cur->next!=NULL){
pre=cur;
cur=cur->next;
i++;
}
cout<<"The number of elements is : "<<i;
}

//deleting node at a particular position
void delete_pos(int position){
node *cur=new node;
node *pre=new node;
for (int i=1;i<position;i++){
pre=cur;
cur=cur->next;
}
pre->next=cur->next;
delete cur;
}
};


int main()
{
linkedlist M;
  M.createnode(30);
  M.createnode(11);
  M.insert_position(3,67);
  M.display();
  M.countnode();
  M.delete_end(); 
  return 0;

}
